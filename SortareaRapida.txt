#include <iostream>
#include <fstream>
#include <chrono>
#include <ctime>


using namespace std;
ofstream out("SortareaRapida_10");


void SortareaRapida(int vect[], int st, int dr)
{
    if(st < dr)
    {
        //pivotul este iniÈ›ial v[st]
        int m = (st + dr) / 2;
        int aux = vect[st];
        vect[st] = vect[m];
        vect[m] = aux;
        int i = st , j = dr, d = 0;
        while(i < j)
        {
            if(vect[i] > vect[j])
            {
                aux = vect[i];
                vect[i] = vect[j];
                vect[j] = aux;
                d = 1 - d;
            }
            i += d;
            j -= 1 - d;
        }
        SortareaRapida(vect, st , i - 1);
        SortareaRapida(vect, i + 1 , dr);
    }
}

int main()
{
    int vect[10];
    int n=10;
    int i=1;
    out<<"Timp in Milisecunde"<<endl;
    while(i<=10000)
    {
        char nr[10];
        itoa(i,nr,10);
        ifstream in(nr);
        int j=0;
        while(in)
        {
            in>>vect[j++];
        }
    chrono::steady_clock::time_point start = chrono::steady_clock::now();

      SortareaRapida(vect,0,n);

    chrono:: steady_clock :: time_point end = chrono::steady_clock::now();
    chrono::steady_clock::duration d = end - start;
    out <<(float)( chrono::duration_cast<chrono::nanoseconds>(d).count())/1000000;
    out<< endl;
        for(j=0; j<n; j++)
        {
            cout<<vect[j]<<" ";
        }
        cout<<endl;
        i++;
    }
    out.close();
    return 0;
}
